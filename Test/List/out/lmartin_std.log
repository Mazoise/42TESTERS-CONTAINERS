[37m# test_list[0m
[33m/* ********************************************************************** */
/*                          [37mBASIC TESTS[33m                                   */
/* ********************************************************************** */[0m

list<[35mint[0m> mylist = list<[35mint[0m>();
list<[35mint[0m> list = list<[35mint[0m>();

list.max_size(): 768614336404564650
mylist.max_size(): 768614336404564650



list.empty(): [32mOK [0m


list.size(): [32mOK [0m


list.pop_back(): [32mOK [0m


list.pop_front(): [32mOK [0m
0 
0 
list.push_back(0): [32mOK [0m0 
0 1 
0 1 
list.push_back(1): [32mOK [0m0 1 
0 1 2 
0 1 2 
list.push_back(2): [32mOK [0m0 1 2 
0 1 2 3 
0 1 2 3 
list.push_back(3): [32mOK [0m0 1 2 3 
0 1 2 3 4 
0 1 2 3 4 
list.push_back(4): [32mOK [0m0 1 2 3 4 
0 1 2 3 4 
0 1 2 3 4 
list.empty(): [32mOK [0m0 1 2 3 4 
0 1 2 3 4 
0 1 2 3 4 
list.size(): [32mOK [0m0 1 2 3 4 
-1 0 1 2 3 4 
-1 0 1 2 3 4 
list.push_front(-1): [32mOK [0m-1 0 1 2 3 4 
-1 0 1 2 3 
-1 0 1 2 3 
list.pop_back(): [32mOK [0m-1 0 1 2 3 


list.pop_back() x5: [32mOK [0m


list.pop_back(): [32mOK [0m
6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 6 
list.assign(10, 6): [32mOK [0m6 6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 
6 6 6 6 6 6 6 6 6 
list.pop_front(): [32mOK [0m6 6 6 6 6 6 6 6 6 
6 
6 
list.unique(): [32mOK [0m6 


list.clear(): [32mOK [0m
[33m/* ********************************************************************** */
/*                        [37mADVANCED TESTS[33m                                  */
/* ********************************************************************** */[0m

[37m// EMPTY LIST[0m


list.reverse(): [32mOK [0m


list.sort(): [32mOK [0m


list.remove(-1): [32mOK [0m
[37m// 1 ELEMENT LIST[0m
-1 
-1 
list.push_back(-1): [32mOK [0m-1 
-1 
-1 
list.reverse(): [32mOK [0m-1 
-1 
-1 
list.sort(): [32mOK [0m-1 


list.remove(-1): [32mOK [0m
[37m// MULTIPLE ELEMENTS LIST[0m
181 
181 
list.push_back(181): [32mOK [0m181 
181 527 
181 527 
list.push_back(527): [32mOK [0m181 527 
181 527 608 
181 527 608 
list.push_back(608): [32mOK [0m181 527 608 
181 527 608 365 
181 527 608 365 
list.push_back(365): [32mOK [0m181 527 608 365 
181 527 608 365 851 
181 527 608 365 851 
list.push_back(851): [32mOK [0m181 527 608 365 851 
181 365 527 608 851 
181 365 527 608 851 
list.sort(): [32mOK [0m181 365 527 608 851 
181 365 527 608 851 
181 365 527 608 851 
list.sort(): [32mOK [0m181 365 527 608 851 
851 608 527 365 181 
851 608 527 365 181 
list.sort(std::greater<int>()): [32mOK [0m851 608 527 365 181 
181 365 527 608 851 
181 365 527 608 851 
list.reverse(): [32mOK [0m181 365 527 608 851 
181 365 527 608 
181 365 527 608 
list.remove(851): [32mOK [0m181 365 527 608 
181 365 527 608 
181 365 527 608 
list.remove(-1): [32mOK [0m181 365 527 608 
list<[35mint[0m> mylist2 = list<[35mint[0m>(5, 500);
list<[35mint[0m> list2 = list<[35mint[0m>(5, 500);

500 500 500 500 500 
500 500 500 500 500 
list.swap(list2): [32mOK [0m500 500 500 500 500 
500 500 500 500 500 6 6 6 6 6 
500 500 500 500 500 6 6 6 6 6 
list.resize(10, 6): [32mOK [0m500 500 500 500 500 6 6 6 6 6 
500 
500 
list.resize(1): [32mOK [0m500 


list.resize(0): [32mOK [0m
181 365 527 608 
181 365 527 608 
list.merge(list2): [32mOK [0m181 365 527 608 
181 365 527 
181 365 527 
list.resize(3, 6): [32mOK [0m181 365 527 
181 365 527 
181 365 527 
list.merge(list2): [32mOK [0m181 365 527 


swap(list, list2): [32mOK [0m
181 365 527 
181 365 527 
swap(list, list2): [32mOK [0m181 365 527 
181 365 527 
181 365 527 
mylist2 = mylist: [32mOK [0m181 365 527 
